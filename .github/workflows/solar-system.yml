name: Solar System Workflow

on: 
  workflow_dispatch:
  push:
    branches:
      - main
      - 'feature/*'
  env:
  MONGO_URI: 'mongodb+srv://supercluster.d83jj.mongodb.net/superData'
  MONGO_USERNAME: ${{ vars.MONGO_USERNAME }}
  MONGO_PASSWORD: ${{ secrets.MONGO_PASSWORD }}
    
jobs:
    # unit-testing:
    #     name: Unit Testing
    #     runs-on: ubuntu-latest
    #     continue-on-error: true
    #     steps:
    #     - name: Checkout Repository
    #       uses: actions/checkout@v4

    #     - name: Setup NodeJS Version
    #       uses: actions/setup-node@v4
    #       with:
    #         node-version: 20
    
    #     - name: Install Dependencies
    #       run: npm install
    
    #     - name: Unit Testing
    #       run: npm test
          
    #     - name: Archive Test Result
    #       uses: actions/upload-artifact@v4
    #       with:
    #         name: Mocha-Test-Result
    #         path: test-results.xml

    docker:
        name: Containerization
        runs-on: ubuntu-latest
        steps:
        - name: Checkout Repository
          uses: actions/checkout@v4

        - name: Dockerhub Login
          uses: docker/login-action@v3.4.0
          with:
            username: ${{ vars.DOCKERHUB_USERNAME }}
            password: ${{ secrets.DOCKERHUB_PASSWORD }}

        - name: Docker Build For Testing
          uses: docker/build-push-action@v6
          with:
            context: .
            push: false
            tags: ${{ vars.DOCKERHUB_USERNAME }}/solar-system:${{ github.sha }}
        
        - name: Docker Image Testing
          run: |
            docker images
            docker run --name solar-system-app -d \
            -p 3000:3000 \
            -e MONGO_URI:$MONGO_URI \
            -e MONGO_USERNAME:$MONGO_USERNAME \
            -e MONGO_PASSWORD:$MONGO_PASSWORD \
            ${{ vars.DOCKERHUB_USERNAME }}/solar-system:${{ github.sha }}
            export IP=$(docker inspect -f '{{range .NetworkSettings.Networks}}{{.IPAddress}}{{end}}' solar-system-app)
            echo $IP

            echo Testing Image URL using wget
            wget -q -O - 127.0.0.1:3000/live | grep live

    dev-deploy:
      needs: docker
      runs-on: ubuntu-latest
      environment:
        name: development
      steps:
        - uses: actions/checkout@v4
        - uses: azure/setup-kubectl@v4
          with:
            version: v1.28.1
        - uses: azure/k8s-set-context@v3
          with:
            method: kubeconfig
            kubeconfig: '${{ secrets.KUBECONFIG }}'
        - run: kubectl version -o yaml